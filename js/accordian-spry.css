@charset "UTF-8";

/* SpryAccordion.css - version 0.4 - Spry Pre-Release 1.5 */

/* Copyright (c) 2006. Adobe Systems Incorporated. All rights reserved. */

/* This is the selector for the main Accordion container. For our default style,
 * we draw borders on the left, right, and bottom. The top border of the Accordion
 * will be rendered by the first AccordionPanelTab which never moves.
 *
 * If you want to constrain the width of the Accordion widget, set a width on
 * the Accordion container. By default, our accordion expands horizontally to fill
 * up available space.
 *
 * The name of the class ("Accordion") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style the
 * Accordion container.
 */
.Accordion {
	border-top: solid 1px gray;
	border-left: solid 1px gray;
	border-right: solid 1px black;
	border-bottom: solid 1px black;
	margin:30px auto;
	width: 710px;
	overflow: hidden;
}


/* This is the selector for the AccordionPanel container which houses the
 * panel tab and a panel content area. It doesn't render visually, but we
 * make sure that it has zero margin and padding.
 *
 * The name of the class ("AccordionPanel") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style an
 * accordion panel container.
*/
.AccordionPanel {
	margin: 0px;
	padding: 0px;
}

/* This is the selector for the AccordionPanelTab. This container houses
 * the title for the panel. This is also the container that the user clicks
 * on to open a specific panel.
 *
 * The name of the class ("AccordionPanelTab") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style an
 * accordion panel tab container.
 *
 * NOTE:
 * This rule uses -moz-user-select and -khtml-user-select properties to prevent the
 * user from selecting the text in the AccordionPanelTab. These are proprietary browser
 * properties that only work in Mozilla based browsers (like FireFox) and KHTML based
 * browsers (like Safari), so they will not pass W3C validation. If you want your documents to
 * validate, and don't care if the user can select the text within an AccordionPanelTab,
 * you can safely remove those properties without affecting the functionality of the widget.
 */
.AccordionPanelTab {
	background-color: #DAE3F8;
	border-top: solid 1px #DAE3F8;
	border-bottom: solid 1px #DAE3F8;
	font: normal 14px "Arial", Helvetica, Verdana, sans-serif;
	color: #060C56;	
	margin: 0px;
	padding: 8px 10px 8px 40px;
	cursor: pointer;
	background-image: url(http://www.udel.edu/images1/bluedot4.gif);
    background-repeat:no-repeat;
    background-position: 3% 50%;
	
}
.AccordionPanelTab2 {
	background-color: #DAE3F8;
	border-top: solid 1px #DAE3F8;
	border-bottom: solid 1px #DAE3F8;
	font: normal 14px "Arial", Helvetica, Verdana, sans-serif;
	color: #060C56;	
	margin: 0px;
	padding: 8px 10px 8px 40px;
	cursor: pointer;
	background-image: url(http://www.udel.edu/images1/bluedot4.gif);
    background-repeat:no-repeat;
    background-position: 3% 28%;
	
}
.headertab {
	background-color: #060C56;
	padding: 5px 20px;
	color:#FFFFFF;
	font:16px "Arial", Helvetica, Verdana, sans-serif;	
	width: 510px;
	cursor: pointer;
}
.headernav {
	padding: 10px 10px 10px 10px;
	background-color: #DAE3F8;
	font-size:12px;
	line-height:14px;
	width: 380px;
	border-left: solid 1px gray;
	border-right: solid 1px black;
	border-bottom: solid 1px gray;
	cursor: pointer;
	float: right;
	 background-image: url(/http://www.udel.edu/images1/bluedot4.gif);
    background-repeat:no-repeat;
    background-position: 3% 50%;
}
/* This is the selector for a Panel's Content area. It's important to note that
 * you should never put any padding on the panel's content area if you plan to
 * use the Accordions panel animations. Placing a non-zero padding on the content
 * area can cause the accordion to abruptly grow in height while the panels animate.
 *
 * Anyone who styles an Accordion *MUST* specify a height on the Accordion Panel
 * Content container.
 *
 * The name of the class ("AccordionPanelContent") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style an
 * accordion panel content container.
 */
.AccordionPanelContent {
	overflow: auto;
	margin: 0px;
	padding: 0px;
	height: 400px;
	
}
.panelcontent {
	padding: 10px 20px;
	background-color: #fff;
	font: 12px "Arial", Helvetica, Verdana, sans-serif;
}
.panelcontent ul li{
	padding-bottom: 2px;
	font-size:13px;
	padding-left: 10px;
	margin-left:20px;
	list-style:disc;
	color:#3366CC;
	
}
.panelcontent p {
	
	font: 12px "Arial", Helvetica, Verdana, sans-serif;
	line-height:18px;
	text-decoration:none;
	
}

.panelcontent h2 {
	
	font: 12px "Arial", Helvetica, Verdana, sans-serif;
	line-height:18px;
	text-decoration:none;
	font-weight:bold;
	
}


.panelcontent a {
	
	font: 12px "Arial", Helvetica, Verdana, sans-serif;
	color: #4680DC;
	font: bold;
	text-decoration:none;
	
}

.panelcontent a:hover, .panelcontent a.selected{
	
	font: 12px "Arial", Helvetica, Verdana, sans-serif;
	color: #0066FF;
	text-decoration:underline;
	
	
}    
/* This is an example of how to change the appearance of the panel tab that is
 * currently open. The class "AccordionPanelOpen" is programatically added and removed
 * from panels as the user clicks on the tabs within the Accordion.
 */
.AccordionPanelOpen .AccordionPanelTab {
	background-color: #fff;
}

/* This is an example of how to change the appearance of the panel tab as the
 * mouse hovers over it. The class "AccordionPanelTabHover" is programatically added
 * and removed from panel tab containers as the mouse enters and exits the tab container.
 */
.AccordionPanelTabHover {
	color: #060C56;
	text-decoration:underline;
	background-color: #A2C7F4;
}
.AccordionPanelOpen .AccordionPanelTabHover {
	color: #060C56;
	text-decoration:underline;
	background-color: #A2C7F4;
}

/* This is an example of how to change the appearance of all the panel tabs when the
 * Accordion has focus. The "AccordionFocused" class is programatically added and removed
 * whenever the Accordion gains or loses keyboard focus.
 */
.AccordionFocused .AccordionPanelTab {
	background-color: #DAE3F8;
}

/* This is an example of how to change the appearance of the panel tab that is
 * currently open when the Accordion has focus.
 */
.AccordionFocused .AccordionPanelOpen .AccordionPanelTab {
	background-color: #fff;
}

